/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    CountCategory,
    instanceOfCountCategory,
    CountCategoryFromJSON,
    CountCategoryFromJSONTyped,
    CountCategoryToJSON,
} from './CountCategory';
import {
    StoreCountCategoryRequest,
    instanceOfStoreCountCategoryRequest,
    StoreCountCategoryRequestFromJSON,
    StoreCountCategoryRequestFromJSONTyped,
    StoreCountCategoryRequestToJSON,
} from './StoreCountCategoryRequest';

/**
 * @type StoreMultipleCountCategoriesResponseItemData
 * 
 * @export
 */
export type StoreMultipleCountCategoriesResponseItemData = CountCategory | StoreCountCategoryRequest;

export function StoreMultipleCountCategoriesResponseItemDataFromJSON(json: any): StoreMultipleCountCategoriesResponseItemData {
    return StoreMultipleCountCategoriesResponseItemDataFromJSONTyped(json, false);
}

export function StoreMultipleCountCategoriesResponseItemDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreMultipleCountCategoriesResponseItemData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return { ...CountCategoryFromJSONTyped(json, true), ...StoreCountCategoryRequestFromJSONTyped(json, true) };
}

export function StoreMultipleCountCategoriesResponseItemDataToJSON(value?: StoreMultipleCountCategoriesResponseItemData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    if (instanceOfCountCategory(value)) {
        return CountCategoryToJSON(value as CountCategory);
    }
    if (instanceOfStoreCountCategoryRequest(value)) {
        return StoreCountCategoryRequestToJSON(value as StoreCountCategoryRequest);
    }

    return {};
}

