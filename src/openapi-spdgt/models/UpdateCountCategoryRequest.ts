/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for updating a count category record.
 * @export
 * @interface UpdateCountCategoryRequest
 */
export interface UpdateCountCategoryRequest {
    /**
     * 
     * @type {number}
     * @memberof UpdateCountCategoryRequest
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateCountCategoryRequest
     */
    surveyTypeId?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateCountCategoryRequest
     */
    abbreviation?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateCountCategoryRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateCountCategoryRequest
     */
    ageClass?: UpdateCountCategoryRequestAgeClassEnum;
    /**
     * 
     * @type {string}
     * @memberof UpdateCountCategoryRequest
     */
    sex?: UpdateCountCategoryRequestSexEnum;
}


/**
 * @export
 */
export const UpdateCountCategoryRequestAgeClassEnum = {
    Adult: 'Adult',
    YoungOfYear: 'Young of Year',
    Juvenile: 'Juvenile',
    Subadult: 'Subadult'
} as const;
export type UpdateCountCategoryRequestAgeClassEnum = typeof UpdateCountCategoryRequestAgeClassEnum[keyof typeof UpdateCountCategoryRequestAgeClassEnum];

/**
 * @export
 */
export const UpdateCountCategoryRequestSexEnum = {
    Male: 'Male',
    Female: 'Female'
} as const;
export type UpdateCountCategoryRequestSexEnum = typeof UpdateCountCategoryRequestSexEnum[keyof typeof UpdateCountCategoryRequestSexEnum];


/**
 * Check if a given object implements the UpdateCountCategoryRequest interface.
 */
export function instanceOfUpdateCountCategoryRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function UpdateCountCategoryRequestFromJSON(json: any): UpdateCountCategoryRequest {
    return UpdateCountCategoryRequestFromJSONTyped(json, false);
}

export function UpdateCountCategoryRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateCountCategoryRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'surveyTypeId': !exists(json, 'survey_type_id') ? undefined : json['survey_type_id'],
        'abbreviation': !exists(json, 'abbreviation') ? undefined : json['abbreviation'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'ageClass': !exists(json, 'age_class') ? undefined : json['age_class'],
        'sex': !exists(json, 'sex') ? undefined : json['sex'],
    };
}

export function UpdateCountCategoryRequestToJSON(value?: UpdateCountCategoryRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'survey_type_id': value.surveyTypeId,
        'abbreviation': value.abbreviation,
        'name': value.name,
        'age_class': value.ageClass,
        'sex': value.sex,
    };
}

