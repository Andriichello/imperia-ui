/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StoreManagementUnitRequest } from './StoreManagementUnitRequest';
import {
    StoreManagementUnitRequestFromJSON,
    StoreManagementUnitRequestFromJSONTyped,
    StoreManagementUnitRequestToJSON,
} from './StoreManagementUnitRequest';

/**
 * Store multiple management units request object.
 * @export
 * @interface StoreMultipleManagementUnitsRequest
 */
export interface StoreMultipleManagementUnitsRequest {
    /**
     * 
     * @type {Array<StoreManagementUnitRequest>}
     * @memberof StoreMultipleManagementUnitsRequest
     */
    data: Array<StoreManagementUnitRequest>;
}

/**
 * Check if a given object implements the StoreMultipleManagementUnitsRequest interface.
 */
export function instanceOfStoreMultipleManagementUnitsRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function StoreMultipleManagementUnitsRequestFromJSON(json: any): StoreMultipleManagementUnitsRequest {
    return StoreMultipleManagementUnitsRequestFromJSONTyped(json, false);
}

export function StoreMultipleManagementUnitsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreMultipleManagementUnitsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(StoreManagementUnitRequestFromJSON)),
    };
}

export function StoreMultipleManagementUnitsRequestToJSON(value?: StoreMultipleManagementUnitsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(StoreManagementUnitRequestToJSON)),
    };
}

