/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Login with OpenID using email & password response data object.
 * @export
 * @interface OpenIDLoginResponseData
 */
export interface OpenIDLoginResponseData {
    /**
     * 
     * @type {string}
     * @memberof OpenIDLoginResponseData
     */
    code: string;
    /**
     * 
     * @type {string}
     * @memberof OpenIDLoginResponseData
     */
    state: string;
    /**
     * 
     * @type {string}
     * @memberof OpenIDLoginResponseData
     */
    redirect: string;
}

/**
 * Check if a given object implements the OpenIDLoginResponseData interface.
 */
export function instanceOfOpenIDLoginResponseData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "state" in value;
    isInstance = isInstance && "redirect" in value;

    return isInstance;
}

export function OpenIDLoginResponseDataFromJSON(json: any): OpenIDLoginResponseData {
    return OpenIDLoginResponseDataFromJSONTyped(json, false);
}

export function OpenIDLoginResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenIDLoginResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': json['code'],
        'state': json['state'],
        'redirect': json['redirect'],
    };
}

export function OpenIDLoginResponseDataToJSON(value?: OpenIDLoginResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'state': value.state,
        'redirect': value.redirect,
    };
}

