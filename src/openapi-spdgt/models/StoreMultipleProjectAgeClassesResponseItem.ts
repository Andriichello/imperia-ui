/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StoreMultipleProjectAgeClassesResponseItemData } from './StoreMultipleProjectAgeClassesResponseItemData';
import {
    StoreMultipleProjectAgeClassesResponseItemDataFromJSON,
    StoreMultipleProjectAgeClassesResponseItemDataFromJSONTyped,
    StoreMultipleProjectAgeClassesResponseItemDataToJSON,
} from './StoreMultipleProjectAgeClassesResponseItemData';

/**
 * Store multiple Project Age Classes response item object.
 * @export
 * @interface StoreMultipleProjectAgeClassesResponseItem
 */
export interface StoreMultipleProjectAgeClassesResponseItem {
    /**
     * 
     * @type {StoreMultipleProjectAgeClassesResponseItemData}
     * @memberof StoreMultipleProjectAgeClassesResponseItem
     */
    data: StoreMultipleProjectAgeClassesResponseItemData;
    /**
     * 
     * @type {boolean}
     * @memberof StoreMultipleProjectAgeClassesResponseItem
     */
    success: boolean;
    /**
     * 
     * @type {string}
     * @memberof StoreMultipleProjectAgeClassesResponseItem
     */
    message: string;
    /**
     * 
     * @type {object}
     * @memberof StoreMultipleProjectAgeClassesResponseItem
     */
    errors?: object;
}

/**
 * Check if a given object implements the StoreMultipleProjectAgeClassesResponseItem interface.
 */
export function instanceOfStoreMultipleProjectAgeClassesResponseItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "success" in value;
    isInstance = isInstance && "message" in value;

    return isInstance;
}

export function StoreMultipleProjectAgeClassesResponseItemFromJSON(json: any): StoreMultipleProjectAgeClassesResponseItem {
    return StoreMultipleProjectAgeClassesResponseItemFromJSONTyped(json, false);
}

export function StoreMultipleProjectAgeClassesResponseItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreMultipleProjectAgeClassesResponseItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': StoreMultipleProjectAgeClassesResponseItemDataFromJSON(json['data']),
        'success': json['success'],
        'message': json['message'],
        'errors': !exists(json, 'errors') ? undefined : json['errors'],
    };
}

export function StoreMultipleProjectAgeClassesResponseItemToJSON(value?: StoreMultipleProjectAgeClassesResponseItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': StoreMultipleProjectAgeClassesResponseItemDataToJSON(value.data),
        'success': value.success,
        'message': value.message,
        'errors': value.errors,
    };
}

