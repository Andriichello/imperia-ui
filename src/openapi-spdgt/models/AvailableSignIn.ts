/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Available sign-in object.
 * @export
 * @interface AvailableSignIn
 */
export interface AvailableSignIn {
    /**
     * 
     * @type {AvailableSignIn}
     * @memberof AvailableSignIn
     */
    project: AvailableSignIn;
    /**
     * 
     * @type {boolean}
     * @memberof AvailableSignIn
     */
    withPassword: boolean;
    /**
     * 
     * @type {string}
     * @memberof AvailableSignIn
     */
    microsoftUrl: string | null;
}

/**
 * Check if a given object implements the AvailableSignIn interface.
 */
export function instanceOfAvailableSignIn(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "project" in value;
    isInstance = isInstance && "withPassword" in value;
    isInstance = isInstance && "microsoftUrl" in value;

    return isInstance;
}

export function AvailableSignInFromJSON(json: any): AvailableSignIn {
    return AvailableSignInFromJSONTyped(json, false);
}

export function AvailableSignInFromJSONTyped(json: any, ignoreDiscriminator: boolean): AvailableSignIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'project': AvailableSignInFromJSON(json['project']),
        'withPassword': json['with_password'],
        'microsoftUrl': json['microsoft_url'],
    };
}

export function AvailableSignInToJSON(value?: AvailableSignIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'project': AvailableSignInToJSON(value.project),
        'with_password': value.withPassword,
        'microsoft_url': value.microsoftUrl,
    };
}

