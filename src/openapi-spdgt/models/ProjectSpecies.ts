/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Project } from './Project';
import {
    ProjectFromJSON,
    ProjectFromJSONTyped,
    ProjectToJSON,
} from './Project';
import type { Species } from './Species';
import {
    SpeciesFromJSON,
    SpeciesFromJSONTyped,
    SpeciesToJSON,
} from './Species';

/**
 * Project species resource object
 * @export
 * @interface ProjectSpecies
 */
export interface ProjectSpecies {
    /**
     * 
     * @type {number}
     * @memberof ProjectSpecies
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectSpecies
     */
    projectId: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectSpecies
     */
    speciesId: number;
    /**
     * 
     * @type {string}
     * @memberof ProjectSpecies
     */
    speciesName: string;
    /**
     * 
     * @type {number}
     * @memberof ProjectSpecies
     */
    modelDay: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProjectSpecies
     */
    modelMonth: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProjectSpecies
     */
    isEnabled: boolean;
    /**
     * 
     * @type {Date}
     * @memberof ProjectSpecies
     */
    createdAt: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ProjectSpecies
     */
    updatedAt: Date | null;
    /**
     * 
     * @type {Project}
     * @memberof ProjectSpecies
     */
    project?: Project;
    /**
     * 
     * @type {Species}
     * @memberof ProjectSpecies
     */
    species?: Species;
}

/**
 * Check if a given object implements the ProjectSpecies interface.
 */
export function instanceOfProjectSpecies(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "projectId" in value;
    isInstance = isInstance && "speciesId" in value;
    isInstance = isInstance && "speciesName" in value;
    isInstance = isInstance && "modelDay" in value;
    isInstance = isInstance && "modelMonth" in value;
    isInstance = isInstance && "isEnabled" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function ProjectSpeciesFromJSON(json: any): ProjectSpecies {
    return ProjectSpeciesFromJSONTyped(json, false);
}

export function ProjectSpeciesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectSpecies {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'projectId': json['project_id'],
        'speciesId': json['species_id'],
        'speciesName': json['species_name'],
        'modelDay': json['model_day'],
        'modelMonth': json['model_month'],
        'isEnabled': json['is_enabled'],
        'createdAt': (json['created_at'] === null ? null : new Date(json['created_at'])),
        'updatedAt': (json['updated_at'] === null ? null : new Date(json['updated_at'])),
        'project': !exists(json, 'project') ? undefined : ProjectFromJSON(json['project']),
        'species': !exists(json, 'species') ? undefined : SpeciesFromJSON(json['species']),
    };
}

export function ProjectSpeciesToJSON(value?: ProjectSpecies | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'project_id': value.projectId,
        'species_id': value.speciesId,
        'species_name': value.speciesName,
        'model_day': value.modelDay,
        'model_month': value.modelMonth,
        'is_enabled': value.isEnabled,
        'created_at': (value.createdAt === null ? null : value.createdAt.toISOString()),
        'updated_at': (value.updatedAt === null ? null : value.updatedAt.toISOString()),
        'project': ProjectToJSON(value.project),
        'species': SpeciesToJSON(value.species),
    };
}

