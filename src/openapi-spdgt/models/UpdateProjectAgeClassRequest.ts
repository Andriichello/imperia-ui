/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for updating  a project age class record.
 * @export
 * @interface UpdateProjectAgeClassRequest
 */
export interface UpdateProjectAgeClassRequest {
    /**
     * 
     * @type {number}
     * @memberof UpdateProjectAgeClassRequest
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateProjectAgeClassRequest
     */
    projectId?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateProjectAgeClassRequest
     */
    speciesId?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateProjectAgeClassRequest
     */
    ageClass?: UpdateProjectAgeClassRequestAgeClassEnum;
    /**
     * 
     * @type {number}
     * @memberof UpdateProjectAgeClassRequest
     */
    ageMinMonths?: number | null;
    /**
     * 
     * @type {number}
     * @memberof UpdateProjectAgeClassRequest
     */
    ageMaxMonths?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateProjectAgeClassRequest
     */
    isFirstReproduction?: boolean;
}


/**
 * @export
 */
export const UpdateProjectAgeClassRequestAgeClassEnum = {
    Adult: 'Adult',
    YoungOfYear: 'Young of Year',
    Juvenile: 'Juvenile',
    Subadult: 'Subadult'
} as const;
export type UpdateProjectAgeClassRequestAgeClassEnum = typeof UpdateProjectAgeClassRequestAgeClassEnum[keyof typeof UpdateProjectAgeClassRequestAgeClassEnum];


/**
 * Check if a given object implements the UpdateProjectAgeClassRequest interface.
 */
export function instanceOfUpdateProjectAgeClassRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function UpdateProjectAgeClassRequestFromJSON(json: any): UpdateProjectAgeClassRequest {
    return UpdateProjectAgeClassRequestFromJSONTyped(json, false);
}

export function UpdateProjectAgeClassRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateProjectAgeClassRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'projectId': !exists(json, 'project_id') ? undefined : json['project_id'],
        'speciesId': !exists(json, 'species_id') ? undefined : json['species_id'],
        'ageClass': !exists(json, 'age_class') ? undefined : json['age_class'],
        'ageMinMonths': !exists(json, 'age_min_months') ? undefined : json['age_min_months'],
        'ageMaxMonths': !exists(json, 'age_max_months') ? undefined : json['age_max_months'],
        'isFirstReproduction': !exists(json, 'is_first_reproduction') ? undefined : json['is_first_reproduction'],
    };
}

export function UpdateProjectAgeClassRequestToJSON(value?: UpdateProjectAgeClassRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'project_id': value.projectId,
        'species_id': value.speciesId,
        'age_class': value.ageClass,
        'age_min_months': value.ageMinMonths,
        'age_max_months': value.ageMaxMonths,
        'is_first_reproduction': value.isFirstReproduction,
    };
}

