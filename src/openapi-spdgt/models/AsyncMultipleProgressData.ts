/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AsyncMultipleProgressCounts } from './AsyncMultipleProgressCounts';
import {
    AsyncMultipleProgressCountsFromJSON,
    AsyncMultipleProgressCountsFromJSONTyped,
    AsyncMultipleProgressCountsToJSON,
} from './AsyncMultipleProgressCounts';

/**
 * Async create or update multiple response's data.
 * @export
 * @interface AsyncMultipleProgressData
 */
export interface AsyncMultipleProgressData {
    /**
     * 
     * @type {Array<object>}
     * @memberof AsyncMultipleProgressData
     */
    data?: Array<object>;
    /**
     * 
     * @type {AsyncMultipleProgressCounts}
     * @memberof AsyncMultipleProgressData
     */
    counts: AsyncMultipleProgressCounts;
    /**
     * 
     * @type {Date}
     * @memberof AsyncMultipleProgressData
     */
    startedAt: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof AsyncMultipleProgressData
     */
    finishedAt: Date | null;
}

/**
 * Check if a given object implements the AsyncMultipleProgressData interface.
 */
export function instanceOfAsyncMultipleProgressData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "counts" in value;
    isInstance = isInstance && "startedAt" in value;
    isInstance = isInstance && "finishedAt" in value;

    return isInstance;
}

export function AsyncMultipleProgressDataFromJSON(json: any): AsyncMultipleProgressData {
    return AsyncMultipleProgressDataFromJSONTyped(json, false);
}

export function AsyncMultipleProgressDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AsyncMultipleProgressData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : json['data'],
        'counts': AsyncMultipleProgressCountsFromJSON(json['counts']),
        'startedAt': (json['started_at'] === null ? null : new Date(json['started_at'])),
        'finishedAt': (json['finished_at'] === null ? null : new Date(json['finished_at'])),
    };
}

export function AsyncMultipleProgressDataToJSON(value?: AsyncMultipleProgressData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data,
        'counts': AsyncMultipleProgressCountsToJSON(value.counts),
        'started_at': (value.startedAt === null ? null : value.startedAt.toISOString()),
        'finished_at': (value.finishedAt === null ? null : value.finishedAt.toISOString()),
    };
}

