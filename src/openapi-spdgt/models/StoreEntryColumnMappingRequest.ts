/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for creating a entry column mapping record.
 *             (`title`, `version_id`) and (`mapped`, `version_id`)
 *             combinations must be unique within `enum.entry_column_mappings` table.
 * @export
 * @interface StoreEntryColumnMappingRequest
 */
export interface StoreEntryColumnMappingRequest {
    /**
     * 
     * @type {number}
     * @memberof StoreEntryColumnMappingRequest
     */
    versionId: number;
    /**
     * 
     * @type {string}
     * @memberof StoreEntryColumnMappingRequest
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof StoreEntryColumnMappingRequest
     */
    source?: StoreEntryColumnMappingRequestSourceEnum;
    /**
     * 
     * @type {string}
     * @memberof StoreEntryColumnMappingRequest
     */
    mapped?: string | null;
    /**
     * 
     * @type {string}
     * @memberof StoreEntryColumnMappingRequest
     */
    operation: StoreEntryColumnMappingRequestOperationEnum;
}


/**
 * @export
 */
export const StoreEntryColumnMappingRequestSourceEnum = {
    Males: 'males',
    Females: 'females',
    Youngs: 'youngs',
    Unclass: 'unclass'
} as const;
export type StoreEntryColumnMappingRequestSourceEnum = typeof StoreEntryColumnMappingRequestSourceEnum[keyof typeof StoreEntryColumnMappingRequestSourceEnum];

/**
 * @export
 */
export const StoreEntryColumnMappingRequestOperationEnum = {
    Hide: 'Hide',
    Substitute: 'Substitute',
    Add: 'Add',
    Subtract: 'Subtract',
    Multiply: 'Multiply',
    Divide: 'Divide'
} as const;
export type StoreEntryColumnMappingRequestOperationEnum = typeof StoreEntryColumnMappingRequestOperationEnum[keyof typeof StoreEntryColumnMappingRequestOperationEnum];


/**
 * Check if a given object implements the StoreEntryColumnMappingRequest interface.
 */
export function instanceOfStoreEntryColumnMappingRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "versionId" in value;
    isInstance = isInstance && "operation" in value;

    return isInstance;
}

export function StoreEntryColumnMappingRequestFromJSON(json: any): StoreEntryColumnMappingRequest {
    return StoreEntryColumnMappingRequestFromJSONTyped(json, false);
}

export function StoreEntryColumnMappingRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreEntryColumnMappingRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'versionId': json['version_id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'source': !exists(json, 'source') ? undefined : json['source'],
        'mapped': !exists(json, 'mapped') ? undefined : json['mapped'],
        'operation': json['operation'],
    };
}

export function StoreEntryColumnMappingRequestToJSON(value?: StoreEntryColumnMappingRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version_id': value.versionId,
        'title': value.title,
        'source': value.source,
        'mapped': value.mapped,
        'operation': value.operation,
    };
}

