/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for getting an array of sign-ins that
 *             are available for given email.
 * @export
 * @interface SignInsRequest
 */
export interface SignInsRequest {
    /**
     * 
     * @type {string}
     * @memberof SignInsRequest
     */
    email: string;
    /**
     * The URL to be redirected to (with `access_token` and `refresh_token`
     *            as query parameters) after successful sign in with Microsoft.
     *            Is required for sign-ins with Microsoft, if missing then the resulting
     *            `microsoft_url` from the response will always be `null`.
     * @type {string}
     * @memberof SignInsRequest
     */
    redirect?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SignInsRequest
     */
    state?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SignInsRequest
     */
    nonce?: string | null;
}

/**
 * Check if a given object implements the SignInsRequest interface.
 */
export function instanceOfSignInsRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;

    return isInstance;
}

export function SignInsRequestFromJSON(json: any): SignInsRequest {
    return SignInsRequestFromJSONTyped(json, false);
}

export function SignInsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignInsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': json['email'],
        'redirect': !exists(json, 'redirect') ? undefined : json['redirect'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'nonce': !exists(json, 'nonce') ? undefined : json['nonce'],
    };
}

export function SignInsRequestToJSON(value?: SignInsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'redirect': value.redirect,
        'state': value.state,
        'nonce': value.nonce,
    };
}

