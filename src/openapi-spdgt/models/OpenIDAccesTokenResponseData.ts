/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Obtain OpenID access token response object.
 * @export
 * @interface OpenIDAccesTokenResponseData
 */
export interface OpenIDAccesTokenResponseData {
    /**
     * 
     * @type {string}
     * @memberof OpenIDAccesTokenResponseData
     */
    idToken: string;
    /**
     * 
     * @type {string}
     * @memberof OpenIDAccesTokenResponseData
     */
    accessToken: string;
    /**
     * 
     * @type {string}
     * @memberof OpenIDAccesTokenResponseData
     */
    tokenType: string;
    /**
     * 
     * @type {string}
     * @memberof OpenIDAccesTokenResponseData
     */
    scope: string;
    /**
     * 
     * @type {Date}
     * @memberof OpenIDAccesTokenResponseData
     */
    expiresAt: Date | null;
    /**
     * 
     * @type {number}
     * @memberof OpenIDAccesTokenResponseData
     */
    expiresIn: number | null;
}

/**
 * Check if a given object implements the OpenIDAccesTokenResponseData interface.
 */
export function instanceOfOpenIDAccesTokenResponseData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "idToken" in value;
    isInstance = isInstance && "accessToken" in value;
    isInstance = isInstance && "tokenType" in value;
    isInstance = isInstance && "scope" in value;
    isInstance = isInstance && "expiresAt" in value;
    isInstance = isInstance && "expiresIn" in value;

    return isInstance;
}

export function OpenIDAccesTokenResponseDataFromJSON(json: any): OpenIDAccesTokenResponseData {
    return OpenIDAccesTokenResponseDataFromJSONTyped(json, false);
}

export function OpenIDAccesTokenResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenIDAccesTokenResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'idToken': json['id_token'],
        'accessToken': json['access_token'],
        'tokenType': json['token_type'],
        'scope': json['scope'],
        'expiresAt': (json['expires_at'] === null ? null : new Date(json['expires_at'])),
        'expiresIn': json['expires_in'],
    };
}

export function OpenIDAccesTokenResponseDataToJSON(value?: OpenIDAccesTokenResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id_token': value.idToken,
        'access_token': value.accessToken,
        'token_type': value.tokenType,
        'scope': value.scope,
        'expires_at': (value.expiresAt === null ? null : value.expiresAt.toISOString()),
        'expires_in': value.expiresIn,
    };
}

