/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Aerial survey entry object for syncing.
 * @export
 * @interface SyncAerialSurveyEntryItem
 */
export interface SyncAerialSurveyEntryItem {
    /**
     * 
     * @type {number}
     * @memberof SyncAerialSurveyEntryItem
     */
    aerialSurveyId: number;
    /**
     * 
     * @type {number}
     * @memberof SyncAerialSurveyEntryItem
     */
    subunitId: number;
    /**
     * 
     * @type {number}
     * @memberof SyncAerialSurveyEntryItem
     */
    speciesId: number;
    /**
     * Must be equal to sum of `males`, `females`, `youngs` and`unclass`
     * @type {number}
     * @memberof SyncAerialSurveyEntryItem
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof SyncAerialSurveyEntryItem
     */
    males: number;
    /**
     * 
     * @type {number}
     * @memberof SyncAerialSurveyEntryItem
     */
    females: number;
    /**
     * 
     * @type {number}
     * @memberof SyncAerialSurveyEntryItem
     */
    youngs: number;
    /**
     * 
     * @type {number}
     * @memberof SyncAerialSurveyEntryItem
     */
    unclass: number;
    /**
     * 
     * @type {object}
     * @memberof SyncAerialSurveyEntryItem
     */
    mappings?: object | null;
    /**
     * 
     * @type {string}
     * @memberof SyncAerialSurveyEntryItem
     */
    activity: SyncAerialSurveyEntryItemActivityEnum;
    /**
     * 
     * @type {string}
     * @memberof SyncAerialSurveyEntryItem
     */
    screenType?: SyncAerialSurveyEntryItemScreenTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof SyncAerialSurveyEntryItem
     */
    vegetationType?: SyncAerialSurveyEntryItemVegetationTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof SyncAerialSurveyEntryItem
     */
    snowPercentage?: number | null;
    /**
     * 
     * @type {number}
     * @memberof SyncAerialSurveyEntryItem
     */
    screenPercentage?: number | null;
    /**
     * 
     * @type {string}
     * @memberof SyncAerialSurveyEntryItem
     */
    waypoint?: string | null;
    /**
     * 
     * @type {number}
     * @memberof SyncAerialSurveyEntryItem
     */
    latitude?: number | null;
    /**
     * 
     * @type {number}
     * @memberof SyncAerialSurveyEntryItem
     */
    longitude?: number | null;
}


/**
 * @export
 */
export const SyncAerialSurveyEntryItemActivityEnum = {
    Bedded: 'Bedded',
    Standing: 'Standing',
    Moving: 'Moving'
} as const;
export type SyncAerialSurveyEntryItemActivityEnum = typeof SyncAerialSurveyEntryItemActivityEnum[keyof typeof SyncAerialSurveyEntryItemActivityEnum];

/**
 * @export
 */
export const SyncAerialSurveyEntryItemScreenTypeEnum = {
    AspenRiparianBrush: 'Aspen/Riparian/Brush',
    Conifer: 'Conifer',
    Sagebrush: 'Sagebrush',
    JuniperMahogany: 'Juniper/Mahogany',
    GrasslandOpen: 'Grassland/Open'
} as const;
export type SyncAerialSurveyEntryItemScreenTypeEnum = typeof SyncAerialSurveyEntryItemScreenTypeEnum[keyof typeof SyncAerialSurveyEntryItemScreenTypeEnum];

/**
 * @export
 */
export const SyncAerialSurveyEntryItemVegetationTypeEnum = {
    AspenRiparianBrush: 'Aspen/Riparian/Brush',
    Conifer: 'Conifer',
    Sagebrush: 'Sagebrush',
    JuniperMahogany: 'Juniper/Mahogany',
    GrasslandOpen: 'Grassland/Open'
} as const;
export type SyncAerialSurveyEntryItemVegetationTypeEnum = typeof SyncAerialSurveyEntryItemVegetationTypeEnum[keyof typeof SyncAerialSurveyEntryItemVegetationTypeEnum];


/**
 * Check if a given object implements the SyncAerialSurveyEntryItem interface.
 */
export function instanceOfSyncAerialSurveyEntryItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "aerialSurveyId" in value;
    isInstance = isInstance && "subunitId" in value;
    isInstance = isInstance && "speciesId" in value;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "males" in value;
    isInstance = isInstance && "females" in value;
    isInstance = isInstance && "youngs" in value;
    isInstance = isInstance && "unclass" in value;
    isInstance = isInstance && "activity" in value;

    return isInstance;
}

export function SyncAerialSurveyEntryItemFromJSON(json: any): SyncAerialSurveyEntryItem {
    return SyncAerialSurveyEntryItemFromJSONTyped(json, false);
}

export function SyncAerialSurveyEntryItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): SyncAerialSurveyEntryItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aerialSurveyId': json['aerial_survey_id'],
        'subunitId': json['subunit_id'],
        'speciesId': json['species_id'],
        'total': json['total'],
        'males': json['males'],
        'females': json['females'],
        'youngs': json['youngs'],
        'unclass': json['unclass'],
        'mappings': !exists(json, 'mappings') ? undefined : json['mappings'],
        'activity': json['activity'],
        'screenType': !exists(json, 'screen_type') ? undefined : json['screen_type'],
        'vegetationType': !exists(json, 'vegetation_type') ? undefined : json['vegetation_type'],
        'snowPercentage': !exists(json, 'snow_percentage') ? undefined : json['snow_percentage'],
        'screenPercentage': !exists(json, 'screen_percentage') ? undefined : json['screen_percentage'],
        'waypoint': !exists(json, 'waypoint') ? undefined : json['waypoint'],
        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
    };
}

export function SyncAerialSurveyEntryItemToJSON(value?: SyncAerialSurveyEntryItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aerial_survey_id': value.aerialSurveyId,
        'subunit_id': value.subunitId,
        'species_id': value.speciesId,
        'total': value.total,
        'males': value.males,
        'females': value.females,
        'youngs': value.youngs,
        'unclass': value.unclass,
        'mappings': value.mappings,
        'activity': value.activity,
        'screen_type': value.screenType,
        'vegetation_type': value.vegetationType,
        'snow_percentage': value.snowPercentage,
        'screen_percentage': value.screenPercentage,
        'waypoint': value.waypoint,
        'latitude': value.latitude,
        'longitude': value.longitude,
    };
}

