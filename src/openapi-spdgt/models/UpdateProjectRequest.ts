/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for updating a project record.
 *            `name` and `abbreviation` must be unique within
 *            the `project.projects` table.
 * @export
 * @interface UpdateProjectRequest
 */
export interface UpdateProjectRequest {
    /**
     * 
     * @type {number}
     * @memberof UpdateProjectRequest
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateProjectRequest
     */
    srid?: number | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateProjectRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateProjectRequest
     */
    abbreviation?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateProjectRequest
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateProjectRequest
     */
    url?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateProjectRequest
     */
    analysisUnit?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateProjectRequest
     */
    managementUnit?: string | null;
}

/**
 * Check if a given object implements the UpdateProjectRequest interface.
 */
export function instanceOfUpdateProjectRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function UpdateProjectRequestFromJSON(json: any): UpdateProjectRequest {
    return UpdateProjectRequestFromJSONTyped(json, false);
}

export function UpdateProjectRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateProjectRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'srid': !exists(json, 'srid') ? undefined : json['srid'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'abbreviation': !exists(json, 'abbreviation') ? undefined : json['abbreviation'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'analysisUnit': !exists(json, 'analysis_unit') ? undefined : json['analysis_unit'],
        'managementUnit': !exists(json, 'management_unit') ? undefined : json['management_unit'],
    };
}

export function UpdateProjectRequestToJSON(value?: UpdateProjectRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'srid': value.srid,
        'name': value.name,
        'abbreviation': value.abbreviation,
        'description': value.description,
        'url': value.url,
        'analysis_unit': value.analysisUnit,
        'management_unit': value.managementUnit,
    };
}

