/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExportIndexMetadata } from './ExportIndexMetadata';
import {
    ExportIndexMetadataFromJSON,
    ExportIndexMetadataFromJSONTyped,
    ExportIndexMetadataToJSON,
} from './ExportIndexMetadata';

/**
 * Results exported into storage and an access URL is returned.
 * @export
 * @interface ExportIndexResponse
 */
export interface ExportIndexResponse {
    /**
     * 
     * @type {string}
     * @memberof ExportIndexResponse
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ExportIndexResponse
     */
    path: string;
    /**
     * 
     * @type {string}
     * @memberof ExportIndexResponse
     */
    disk: string;
    /**
     * 
     * @type {string}
     * @memberof ExportIndexResponse
     */
    url: string;
    /**
     * 
     * @type {ExportIndexMetadata}
     * @memberof ExportIndexResponse
     */
    metadata: ExportIndexMetadata;
    /**
     * 
     * @type {string}
     * @memberof ExportIndexResponse
     */
    message: string;
}

/**
 * Check if a given object implements the ExportIndexResponse interface.
 */
export function instanceOfExportIndexResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "path" in value;
    isInstance = isInstance && "disk" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "message" in value;

    return isInstance;
}

export function ExportIndexResponseFromJSON(json: any): ExportIndexResponse {
    return ExportIndexResponseFromJSONTyped(json, false);
}

export function ExportIndexResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportIndexResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'path': json['path'],
        'disk': json['disk'],
        'url': json['url'],
        'metadata': ExportIndexMetadataFromJSON(json['metadata']),
        'message': json['message'],
    };
}

export function ExportIndexResponseToJSON(value?: ExportIndexResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'path': value.path,
        'disk': value.disk,
        'url': value.url,
        'metadata': ExportIndexMetadataToJSON(value.metadata),
        'message': value.message,
    };
}

