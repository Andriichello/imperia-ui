/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Aerial survey design summary resource object
 * @export
 * @interface DesignSummary
 */
export interface DesignSummary {
    /**
     * 
     * @type {number}
     * @memberof DesignSummary
     */
    analysisUnitId: number;
    /**
     * 
     * @type {string}
     * @memberof DesignSummary
     */
    analysisUnit: string;
    /**
     * 
     * @type {number}
     * @memberof DesignSummary
     */
    bioYear: number;
    /**
     * 
     * @type {number}
     * @memberof DesignSummary
     */
    stratumId: number;
    /**
     * 
     * @type {string}
     * @memberof DesignSummary
     */
    stratumAbbreviation: string;
    /**
     * 
     * @type {string}
     * @memberof DesignSummary
     */
    stratumName: string;
    /**
     * 
     * @type {number}
     * @memberof DesignSummary
     */
    surveyTypeId: number;
    /**
     * 
     * @type {number}
     * @memberof DesignSummary
     */
    stratumOrder: number;
    /**
     * 
     * @type {string}
     * @memberof DesignSummary
     */
    mapColor: string;
    /**
     * 
     * @type {number}
     * @memberof DesignSummary
     */
    subunitsAvailable: number;
    /**
     * 
     * @type {number}
     * @memberof DesignSummary
     */
    subunitsSampled: number;
    /**
     * 
     * @type {number}
     * @memberof DesignSummary
     */
    proportionSampled: number;
    /**
     * 
     * @type {number}
     * @memberof DesignSummary
     */
    adjustedSubunitsAvailable: number;
    /**
     * 
     * @type {number}
     * @memberof DesignSummary
     */
    adjustedSubunitsSampled: number;
    /**
     * 
     * @type {number}
     * @memberof DesignSummary
     */
    adjustedProportionSampled: number;
}

/**
 * Check if a given object implements the DesignSummary interface.
 */
export function instanceOfDesignSummary(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "analysisUnitId" in value;
    isInstance = isInstance && "analysisUnit" in value;
    isInstance = isInstance && "bioYear" in value;
    isInstance = isInstance && "stratumId" in value;
    isInstance = isInstance && "stratumAbbreviation" in value;
    isInstance = isInstance && "stratumName" in value;
    isInstance = isInstance && "surveyTypeId" in value;
    isInstance = isInstance && "stratumOrder" in value;
    isInstance = isInstance && "mapColor" in value;
    isInstance = isInstance && "subunitsAvailable" in value;
    isInstance = isInstance && "subunitsSampled" in value;
    isInstance = isInstance && "proportionSampled" in value;
    isInstance = isInstance && "adjustedSubunitsAvailable" in value;
    isInstance = isInstance && "adjustedSubunitsSampled" in value;
    isInstance = isInstance && "adjustedProportionSampled" in value;

    return isInstance;
}

export function DesignSummaryFromJSON(json: any): DesignSummary {
    return DesignSummaryFromJSONTyped(json, false);
}

export function DesignSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): DesignSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'analysisUnitId': json['analysis_unit_id'],
        'analysisUnit': json['analysis_unit'],
        'bioYear': json['bio_year'],
        'stratumId': json['stratum_id'],
        'stratumAbbreviation': json['stratum_abbreviation'],
        'stratumName': json['stratum_name'],
        'surveyTypeId': json['survey_type_id'],
        'stratumOrder': json['stratum_order'],
        'mapColor': json['map_color'],
        'subunitsAvailable': json['subunits_available'],
        'subunitsSampled': json['subunits_sampled'],
        'proportionSampled': json['proportion_sampled'],
        'adjustedSubunitsAvailable': json['adjusted_subunits_available'],
        'adjustedSubunitsSampled': json['adjusted_subunits_sampled'],
        'adjustedProportionSampled': json['adjusted_proportion_sampled'],
    };
}

export function DesignSummaryToJSON(value?: DesignSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'analysis_unit_id': value.analysisUnitId,
        'analysis_unit': value.analysisUnit,
        'bio_year': value.bioYear,
        'stratum_id': value.stratumId,
        'stratum_abbreviation': value.stratumAbbreviation,
        'stratum_name': value.stratumName,
        'survey_type_id': value.surveyTypeId,
        'stratum_order': value.stratumOrder,
        'map_color': value.mapColor,
        'subunits_available': value.subunitsAvailable,
        'subunits_sampled': value.subunitsSampled,
        'proportion_sampled': value.proportionSampled,
        'adjusted_subunits_available': value.adjustedSubunitsAvailable,
        'adjusted_subunits_sampled': value.adjustedSubunitsSampled,
        'adjusted_proportion_sampled': value.adjustedProportionSampled,
    };
}

