/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for updating a parameter record.
 *             `project_id` and `name`, `project_id` and `abbreviation` combinations
 *             must be unique within the `output.parameters` table.
 * @export
 * @interface UpdateParameterRequest
 */
export interface UpdateParameterRequest {
    /**
     * 
     * @type {number}
     * @memberof UpdateParameterRequest
     */
    projectId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateParameterRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateParameterRequest
     */
    abbreviation?: string;
}

/**
 * Check if a given object implements the UpdateParameterRequest interface.
 */
export function instanceOfUpdateParameterRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateParameterRequestFromJSON(json: any): UpdateParameterRequest {
    return UpdateParameterRequestFromJSONTyped(json, false);
}

export function UpdateParameterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateParameterRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'projectId': !exists(json, 'project_id') ? undefined : json['project_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'abbreviation': !exists(json, 'abbreviation') ? undefined : json['abbreviation'],
    };
}

export function UpdateParameterRequestToJSON(value?: UpdateParameterRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'project_id': value.projectId,
        'name': value.name,
        'abbreviation': value.abbreviation,
    };
}

