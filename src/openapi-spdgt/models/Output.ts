/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AerialSurveyFileContext } from './AerialSurveyFileContext';
import {
    AerialSurveyFileContextFromJSON,
    AerialSurveyFileContextFromJSONTyped,
    AerialSurveyFileContextToJSON,
} from './AerialSurveyFileContext';
import type { IpmEntry } from './IpmEntry';
import {
    IpmEntryFromJSON,
    IpmEntryFromJSONTyped,
    IpmEntryToJSON,
} from './IpmEntry';
import type { Model } from './Model';
import {
    ModelFromJSON,
    ModelFromJSONTyped,
    ModelToJSON,
} from './Model';
import type { OutputFile } from './OutputFile';
import {
    OutputFileFromJSON,
    OutputFileFromJSONTyped,
    OutputFileToJSON,
} from './OutputFile';
import type { OutputStep } from './OutputStep';
import {
    OutputStepFromJSON,
    OutputStepFromJSONTyped,
    OutputStepToJSON,
} from './OutputStep';
import type { PriorEntry } from './PriorEntry';
import {
    PriorEntryFromJSON,
    PriorEntryFromJSONTyped,
    PriorEntryToJSON,
} from './PriorEntry';
import type { Recipe } from './Recipe';
import {
    RecipeFromJSON,
    RecipeFromJSONTyped,
    RecipeToJSON,
} from './Recipe';

/**
 * Model output resource object
 * @export
 * @interface Output
 */
export interface Output {
    /**
     * 
     * @type {number}
     * @memberof Output
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof Output
     */
    modelId: number;
    /**
     * 
     * @type {number}
     * @memberof Output
     */
    recipeId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Output
     */
    projectId: number | null;
    /**
     * 
     * @type {number}
     * @memberof Output
     */
    contextId: number | null;
    /**
     * 
     * @type {string}
     * @memberof Output
     */
    contextType: string | null;
    /**
     * 
     * @type {string}
     * @memberof Output
     */
    status?: OutputStatusEnum;
    /**
     * Model output's metadata.
     * @type {object}
     * @memberof Output
     */
    metadata: object;
    /**
     * 
     * @type {Date}
     * @memberof Output
     */
    createdAt: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Output
     */
    updatedAt: Date | null;
    /**
     * 
     * @type {Model}
     * @memberof Output
     */
    model?: Model;
    /**
     * 
     * @type {Recipe}
     * @memberof Output
     */
    recipe?: Recipe;
    /**
     * 
     * @type {AerialSurveyFileContext}
     * @memberof Output
     */
    context?: AerialSurveyFileContext | null;
    /**
     * 
     * @type {Array<OutputFile>}
     * @memberof Output
     */
    files?: Array<OutputFile>;
    /**
     * 
     * @type {Array<IpmEntry>}
     * @memberof Output
     */
    ipmEntries?: Array<IpmEntry>;
    /**
     * 
     * @type {Array<PriorEntry>}
     * @memberof Output
     */
    priorEntries?: Array<PriorEntry>;
    /**
     * 
     * @type {Array<OutputStep>}
     * @memberof Output
     */
    steps?: Array<OutputStep>;
}


/**
 * @export
 */
export const OutputStatusEnum = {
    Pending: 'Pending',
    Processing: 'Processing',
    Postponed: 'Postponed',
    Cancelled: 'Cancelled',
    Completed: 'Completed'
} as const;
export type OutputStatusEnum = typeof OutputStatusEnum[keyof typeof OutputStatusEnum];


/**
 * Check if a given object implements the Output interface.
 */
export function instanceOfOutput(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "modelId" in value;
    isInstance = isInstance && "projectId" in value;
    isInstance = isInstance && "contextId" in value;
    isInstance = isInstance && "contextType" in value;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function OutputFromJSON(json: any): Output {
    return OutputFromJSONTyped(json, false);
}

export function OutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): Output {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'modelId': json['model_id'],
        'recipeId': !exists(json, 'recipe_id') ? undefined : json['recipe_id'],
        'projectId': json['project_id'],
        'contextId': json['context_id'],
        'contextType': json['context_type'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'metadata': json['metadata'],
        'createdAt': (json['created_at'] === null ? null : new Date(json['created_at'])),
        'updatedAt': (json['updated_at'] === null ? null : new Date(json['updated_at'])),
        'model': !exists(json, 'model') ? undefined : ModelFromJSON(json['model']),
        'recipe': !exists(json, 'recipe') ? undefined : RecipeFromJSON(json['recipe']),
        'context': !exists(json, 'context') ? undefined : AerialSurveyFileContextFromJSON(json['context']),
        'files': !exists(json, 'files') ? undefined : ((json['files'] as Array<any>).map(OutputFileFromJSON)),
        'ipmEntries': !exists(json, 'ipmEntries') ? undefined : ((json['ipmEntries'] as Array<any>).map(IpmEntryFromJSON)),
        'priorEntries': !exists(json, 'priorEntries') ? undefined : ((json['priorEntries'] as Array<any>).map(PriorEntryFromJSON)),
        'steps': !exists(json, 'steps') ? undefined : ((json['steps'] as Array<any>).map(OutputStepFromJSON)),
    };
}

export function OutputToJSON(value?: Output | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'model_id': value.modelId,
        'recipe_id': value.recipeId,
        'project_id': value.projectId,
        'context_id': value.contextId,
        'context_type': value.contextType,
        'status': value.status,
        'metadata': value.metadata,
        'created_at': (value.createdAt === null ? null : value.createdAt.toISOString()),
        'updated_at': (value.updatedAt === null ? null : value.updatedAt.toISOString()),
        'model': ModelToJSON(value.model),
        'recipe': RecipeToJSON(value.recipe),
        'context': AerialSurveyFileContextToJSON(value.context),
        'files': value.files === undefined ? undefined : ((value.files as Array<any>).map(OutputFileToJSON)),
        'ipmEntries': value.ipmEntries === undefined ? undefined : ((value.ipmEntries as Array<any>).map(IpmEntryToJSON)),
        'priorEntries': value.priorEntries === undefined ? undefined : ((value.priorEntries as Array<any>).map(PriorEntryToJSON)),
        'steps': value.steps === undefined ? undefined : ((value.steps as Array<any>).map(OutputStepToJSON)),
    };
}

