/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for creating a model output step record.
 * @export
 * @interface StoreOutputStepRequest
 */
export interface StoreOutputStepRequest {
    /**
     * 
     * @type {number}
     * @memberof StoreOutputStepRequest
     */
    outputId: number | null;
    /**
     * 
     * @type {number}
     * @memberof StoreOutputStepRequest
     */
    number?: number | null;
    /**
     * 
     * @type {string}
     * @memberof StoreOutputStepRequest
     */
    status?: StoreOutputStepRequestStatusEnum;
    /**
     * 
     * @type {object}
     * @memberof StoreOutputStepRequest
     */
    metadata?: object | null;
    /**
     * 
     * @type {Date}
     * @memberof StoreOutputStepRequest
     */
    startedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof StoreOutputStepRequest
     */
    finishedAt?: Date | null;
}


/**
 * @export
 */
export const StoreOutputStepRequestStatusEnum = {
    Pending: 'Pending',
    Processing: 'Processing',
    Postponed: 'Postponed',
    Cancelled: 'Cancelled',
    Completed: 'Completed'
} as const;
export type StoreOutputStepRequestStatusEnum = typeof StoreOutputStepRequestStatusEnum[keyof typeof StoreOutputStepRequestStatusEnum];


/**
 * Check if a given object implements the StoreOutputStepRequest interface.
 */
export function instanceOfStoreOutputStepRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "outputId" in value;

    return isInstance;
}

export function StoreOutputStepRequestFromJSON(json: any): StoreOutputStepRequest {
    return StoreOutputStepRequestFromJSONTyped(json, false);
}

export function StoreOutputStepRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreOutputStepRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'outputId': json['output_id'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'startedAt': !exists(json, 'started_at') ? undefined : (json['started_at'] === null ? null : new Date(json['started_at'])),
        'finishedAt': !exists(json, 'finished_at') ? undefined : (json['finished_at'] === null ? null : new Date(json['finished_at'])),
    };
}

export function StoreOutputStepRequestToJSON(value?: StoreOutputStepRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'output_id': value.outputId,
        'number': value.number,
        'status': value.status,
        'metadata': value.metadata,
        'started_at': value.startedAt === undefined ? undefined : (value.startedAt === null ? null : value.startedAt.toISOString()),
        'finished_at': value.finishedAt === undefined ? undefined : (value.finishedAt === null ? null : value.finishedAt.toISOString()),
    };
}

