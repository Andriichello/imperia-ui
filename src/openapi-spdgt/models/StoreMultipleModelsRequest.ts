/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StoreModelRequest } from './StoreModelRequest';
import {
    StoreModelRequestFromJSON,
    StoreModelRequestFromJSONTyped,
    StoreModelRequestToJSON,
} from './StoreModelRequest';

/**
 * Store multiple models request object.
 * @export
 * @interface StoreMultipleModelsRequest
 */
export interface StoreMultipleModelsRequest {
    /**
     * 
     * @type {Array<StoreModelRequest>}
     * @memberof StoreMultipleModelsRequest
     */
    data: Array<StoreModelRequest>;
}

/**
 * Check if a given object implements the StoreMultipleModelsRequest interface.
 */
export function instanceOfStoreMultipleModelsRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function StoreMultipleModelsRequestFromJSON(json: any): StoreMultipleModelsRequest {
    return StoreMultipleModelsRequestFromJSONTyped(json, false);
}

export function StoreMultipleModelsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreMultipleModelsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(StoreModelRequestFromJSON)),
    };
}

export function StoreMultipleModelsRequestToJSON(value?: StoreMultipleModelsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(StoreModelRequestToJSON)),
    };
}

