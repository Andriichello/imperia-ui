/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for updating a survey type record.
 *             `name`, `project_id` and `species_id` combination must be unique.
 *              within the `enum.survey_types` table.
 * @export
 * @interface UpdateSurveyTypeRequest
 */
export interface UpdateSurveyTypeRequest {
    /**
     * 
     * @type {number}
     * @memberof UpdateSurveyTypeRequest
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateSurveyTypeRequest
     */
    projectId?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateSurveyTypeRequest
     */
    speciesId?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateSurveyTypeRequest
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateSurveyTypeRequest
     */
    cutoffDay?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateSurveyTypeRequest
     */
    cutoffMonth?: number;
}

/**
 * Check if a given object implements the UpdateSurveyTypeRequest interface.
 */
export function instanceOfUpdateSurveyTypeRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function UpdateSurveyTypeRequestFromJSON(json: any): UpdateSurveyTypeRequest {
    return UpdateSurveyTypeRequestFromJSONTyped(json, false);
}

export function UpdateSurveyTypeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateSurveyTypeRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'projectId': !exists(json, 'project_id') ? undefined : json['project_id'],
        'speciesId': !exists(json, 'species_id') ? undefined : json['species_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'cutoffDay': !exists(json, 'cutoff_day') ? undefined : json['cutoff_day'],
        'cutoffMonth': !exists(json, 'cutoff_month') ? undefined : json['cutoff_month'],
    };
}

export function UpdateSurveyTypeRequestToJSON(value?: UpdateSurveyTypeRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'project_id': value.projectId,
        'species_id': value.speciesId,
        'name': value.name,
        'cutoff_day': value.cutoffDay,
        'cutoff_month': value.cutoffMonth,
    };
}

