/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SurveyType } from './SurveyType';
import {
    SurveyTypeFromJSON,
    SurveyTypeFromJSONTyped,
    SurveyTypeToJSON,
} from './SurveyType';

/**
 * Stratum resource object
 * @export
 * @interface Stratum
 */
export interface Stratum {
    /**
     * 
     * @type {number}
     * @memberof Stratum
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof Stratum
     */
    surveyTypeId: number;
    /**
     * 
     * @type {number}
     * @memberof Stratum
     */
    stratumOrder: number;
    /**
     * 
     * @type {string}
     * @memberof Stratum
     */
    abbreviation: string;
    /**
     * 
     * @type {string}
     * @memberof Stratum
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof Stratum
     */
    extrapolate: boolean;
    /**
     * 
     * @type {string}
     * @memberof Stratum
     */
    mapColor: string | null;
    /**
     * 
     * @type {number}
     * @memberof Stratum
     */
    defaultProp: number;
    /**
     * 
     * @type {SurveyType}
     * @memberof Stratum
     */
    surveyType?: SurveyType;
}

/**
 * Check if a given object implements the Stratum interface.
 */
export function instanceOfStratum(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "surveyTypeId" in value;
    isInstance = isInstance && "stratumOrder" in value;
    isInstance = isInstance && "abbreviation" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "extrapolate" in value;
    isInstance = isInstance && "mapColor" in value;
    isInstance = isInstance && "defaultProp" in value;

    return isInstance;
}

export function StratumFromJSON(json: any): Stratum {
    return StratumFromJSONTyped(json, false);
}

export function StratumFromJSONTyped(json: any, ignoreDiscriminator: boolean): Stratum {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'surveyTypeId': json['survey_type_id'],
        'stratumOrder': json['stratum_order'],
        'abbreviation': json['abbreviation'],
        'name': json['name'],
        'extrapolate': json['extrapolate'],
        'mapColor': json['map_color'],
        'defaultProp': json['default_prop'],
        'surveyType': !exists(json, 'surveyType') ? undefined : SurveyTypeFromJSON(json['surveyType']),
    };
}

export function StratumToJSON(value?: Stratum | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'survey_type_id': value.surveyTypeId,
        'stratum_order': value.stratumOrder,
        'abbreviation': value.abbreviation,
        'name': value.name,
        'extrapolate': value.extrapolate,
        'map_color': value.mapColor,
        'default_prop': value.defaultProp,
        'surveyType': SurveyTypeToJSON(value.surveyType),
    };
}

