/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for creating an aerial survey record.
 * @export
 * @interface StoreAerialSurveyRequest
 */
export interface StoreAerialSurveyRequest {
    /**
     * 
     * @type {number}
     * @memberof StoreAerialSurveyRequest
     */
    surveyTypeId: number;
    /**
     * 
     * @type {number}
     * @memberof StoreAerialSurveyRequest
     */
    managementUnitId: number;
    /**
     * 
     * @type {number}
     * @memberof StoreAerialSurveyRequest
     */
    columnMappingVersionId?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof StoreAerialSurveyRequest
     */
    date: Date;
    /**
     * 
     * @type {number}
     * @memberof StoreAerialSurveyRequest
     */
    startTach?: number | null;
    /**
     * 
     * @type {number}
     * @memberof StoreAerialSurveyRequest
     */
    endTach?: number | null;
    /**
     * 
     * @type {string}
     * @memberof StoreAerialSurveyRequest
     */
    startTime?: string | null;
    /**
     * 
     * @type {string}
     * @memberof StoreAerialSurveyRequest
     */
    endTime?: string | null;
    /**
     * 
     * @type {number}
     * @memberof StoreAerialSurveyRequest
     */
    aircraftId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof StoreAerialSurveyRequest
     */
    flight?: string | null;
    /**
     * 
     * @type {string}
     * @memberof StoreAerialSurveyRequest
     */
    observers?: string | null;
    /**
     * Fahrenheit.
     * @type {number}
     * @memberof StoreAerialSurveyRequest
     */
    temperature?: number | null;
    /**
     * Miles per hour.
     * @type {number}
     * @memberof StoreAerialSurveyRequest
     */
    wind?: number | null;
    /**
     * Percentes (0-100%).
     * @type {number}
     * @memberof StoreAerialSurveyRequest
     */
    clouds?: number | null;
    /**
     * Inches.
     * @type {number}
     * @memberof StoreAerialSurveyRequest
     */
    precipitation?: number | null;
}

/**
 * Check if a given object implements the StoreAerialSurveyRequest interface.
 */
export function instanceOfStoreAerialSurveyRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "surveyTypeId" in value;
    isInstance = isInstance && "managementUnitId" in value;
    isInstance = isInstance && "date" in value;

    return isInstance;
}

export function StoreAerialSurveyRequestFromJSON(json: any): StoreAerialSurveyRequest {
    return StoreAerialSurveyRequestFromJSONTyped(json, false);
}

export function StoreAerialSurveyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreAerialSurveyRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'surveyTypeId': json['survey_type_id'],
        'managementUnitId': json['management_unit_id'],
        'columnMappingVersionId': !exists(json, 'column_mapping_version_id') ? undefined : json['column_mapping_version_id'],
        'date': (new Date(json['date'])),
        'startTach': !exists(json, 'start_tach') ? undefined : json['start_tach'],
        'endTach': !exists(json, 'end_tach') ? undefined : json['end_tach'],
        'startTime': !exists(json, 'start_time') ? undefined : json['start_time'],
        'endTime': !exists(json, 'end_time') ? undefined : json['end_time'],
        'aircraftId': !exists(json, 'aircraft_id') ? undefined : json['aircraft_id'],
        'flight': !exists(json, 'flight') ? undefined : json['flight'],
        'observers': !exists(json, 'observers') ? undefined : json['observers'],
        'temperature': !exists(json, 'temperature') ? undefined : json['temperature'],
        'wind': !exists(json, 'wind') ? undefined : json['wind'],
        'clouds': !exists(json, 'clouds') ? undefined : json['clouds'],
        'precipitation': !exists(json, 'precipitation') ? undefined : json['precipitation'],
    };
}

export function StoreAerialSurveyRequestToJSON(value?: StoreAerialSurveyRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'survey_type_id': value.surveyTypeId,
        'management_unit_id': value.managementUnitId,
        'column_mapping_version_id': value.columnMappingVersionId,
        'date': (value.date.toISOString().substr(0,10)),
        'start_tach': value.startTach,
        'end_tach': value.endTach,
        'start_time': value.startTime,
        'end_time': value.endTime,
        'aircraft_id': value.aircraftId,
        'flight': value.flight,
        'observers': value.observers,
        'temperature': value.temperature,
        'wind': value.wind,
        'clouds': value.clouds,
        'precipitation': value.precipitation,
    };
}

