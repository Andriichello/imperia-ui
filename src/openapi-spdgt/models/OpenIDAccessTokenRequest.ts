/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for polling OpenID access token.
 * @export
 * @interface OpenIDAccessTokenRequest
 */
export interface OpenIDAccessTokenRequest {
    /**
     * 
     * @type {string}
     * @memberof OpenIDAccessTokenRequest
     */
    code: string;
    /**
     * 
     * @type {string}
     * @memberof OpenIDAccessTokenRequest
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof OpenIDAccessTokenRequest
     */
    clientId: string;
    /**
     * 
     * @type {string}
     * @memberof OpenIDAccessTokenRequest
     */
    clientSecret: string;
    /**
     * 
     * @type {string}
     * @memberof OpenIDAccessTokenRequest
     */
    grantType: OpenIDAccessTokenRequestGrantTypeEnum;
}


/**
 * @export
 */
export const OpenIDAccessTokenRequestGrantTypeEnum = {
    AuthorizationCode: 'authorization_code'
} as const;
export type OpenIDAccessTokenRequestGrantTypeEnum = typeof OpenIDAccessTokenRequestGrantTypeEnum[keyof typeof OpenIDAccessTokenRequestGrantTypeEnum];


/**
 * Check if a given object implements the OpenIDAccessTokenRequest interface.
 */
export function instanceOfOpenIDAccessTokenRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "clientId" in value;
    isInstance = isInstance && "clientSecret" in value;
    isInstance = isInstance && "grantType" in value;

    return isInstance;
}

export function OpenIDAccessTokenRequestFromJSON(json: any): OpenIDAccessTokenRequest {
    return OpenIDAccessTokenRequestFromJSONTyped(json, false);
}

export function OpenIDAccessTokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenIDAccessTokenRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': json['code'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'clientId': json['client_id'],
        'clientSecret': json['client_secret'],
        'grantType': json['grant_type'],
    };
}

export function OpenIDAccessTokenRequestToJSON(value?: OpenIDAccessTokenRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'state': value.state,
        'client_id': value.clientId,
        'client_secret': value.clientSecret,
        'grant_type': value.grantType,
    };
}

