/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for updating an aerial survey design record.
 * @export
 * @interface UpdateAerialSurveyDesignRequest
 */
export interface UpdateAerialSurveyDesignRequest {
    /**
     * 
     * @type {number}
     * @memberof UpdateAerialSurveyDesignRequest
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateAerialSurveyDesignRequest
     */
    surveyTypeId?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateAerialSurveyDesignRequest
     */
    subunitId?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateAerialSurveyDesignRequest
     */
    stratumId?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateAerialSurveyDesignRequest
     */
    bioYear?: number;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateAerialSurveyDesignRequest
     */
    isSelected?: boolean;
    /**
     * Can be `true` only if `is_selected` is `true`.
     * @type {boolean}
     * @memberof UpdateAerialSurveyDesignRequest
     */
    isSurveyed?: boolean;
}

/**
 * Check if a given object implements the UpdateAerialSurveyDesignRequest interface.
 */
export function instanceOfUpdateAerialSurveyDesignRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function UpdateAerialSurveyDesignRequestFromJSON(json: any): UpdateAerialSurveyDesignRequest {
    return UpdateAerialSurveyDesignRequestFromJSONTyped(json, false);
}

export function UpdateAerialSurveyDesignRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateAerialSurveyDesignRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'surveyTypeId': !exists(json, 'survey_type_id') ? undefined : json['survey_type_id'],
        'subunitId': !exists(json, 'subunit_id') ? undefined : json['subunit_id'],
        'stratumId': !exists(json, 'stratum_id') ? undefined : json['stratum_id'],
        'bioYear': !exists(json, 'bio_year') ? undefined : json['bio_year'],
        'isSelected': !exists(json, 'is_selected') ? undefined : json['is_selected'],
        'isSurveyed': !exists(json, 'is_surveyed') ? undefined : json['is_surveyed'],
    };
}

export function UpdateAerialSurveyDesignRequestToJSON(value?: UpdateAerialSurveyDesignRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'survey_type_id': value.surveyTypeId,
        'subunit_id': value.subunitId,
        'stratum_id': value.stratumId,
        'bio_year': value.bioYear,
        'is_selected': value.isSelected,
        'is_surveyed': value.isSurveyed,
    };
}

