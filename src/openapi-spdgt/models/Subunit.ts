/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ManagementUnit } from './ManagementUnit';
import {
    ManagementUnitFromJSON,
    ManagementUnitFromJSONTyped,
    ManagementUnitToJSON,
} from './ManagementUnit';

/**
 * Subunit resource object
 * @export
 * @interface Subunit
 */
export interface Subunit {
    /**
     * 
     * @type {number}
     * @memberof Subunit
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof Subunit
     */
    managementUnitId: number;
    /**
     * 
     * @type {string}
     * @memberof Subunit
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof Subunit
     */
    sortOrder: number;
    /**
     * 
     * @type {string}
     * @memberof Subunit
     */
    polygon?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Subunit
     */
    geography?: string | null;
    /**
     * 
     * @type {ManagementUnit}
     * @memberof Subunit
     */
    managementUnit?: ManagementUnit;
}

/**
 * Check if a given object implements the Subunit interface.
 */
export function instanceOfSubunit(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "managementUnitId" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "sortOrder" in value;

    return isInstance;
}

export function SubunitFromJSON(json: any): Subunit {
    return SubunitFromJSONTyped(json, false);
}

export function SubunitFromJSONTyped(json: any, ignoreDiscriminator: boolean): Subunit {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'managementUnitId': json['management_unit_id'],
        'name': json['name'],
        'sortOrder': json['sort_order'],
        'polygon': !exists(json, 'polygon') ? undefined : json['polygon'],
        'geography': !exists(json, 'geography') ? undefined : json['geography'],
        'managementUnit': !exists(json, 'managementUnit') ? undefined : ManagementUnitFromJSON(json['managementUnit']),
    };
}

export function SubunitToJSON(value?: Subunit | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'management_unit_id': value.managementUnitId,
        'name': value.name,
        'sort_order': value.sortOrder,
        'polygon': value.polygon,
        'geography': value.geography,
        'managementUnit': ManagementUnitToJSON(value.managementUnit),
    };
}

