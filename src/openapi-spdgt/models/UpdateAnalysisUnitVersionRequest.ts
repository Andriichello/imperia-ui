/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for updating an analysis unit version record.
 * @export
 * @interface UpdateAnalysisUnitVersionRequest
 */
export interface UpdateAnalysisUnitVersionRequest {
    /**
     * 
     * @type {number}
     * @memberof UpdateAnalysisUnitVersionRequest
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateAnalysisUnitVersionRequest
     */
    projectId?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateAnalysisUnitVersionRequest
     */
    speciesId?: number;
    /**
     * 
     * @type {Date}
     * @memberof UpdateAnalysisUnitVersionRequest
     */
    date?: Date;
    /**
     * 
     * @type {string}
     * @memberof UpdateAnalysisUnitVersionRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateAnalysisUnitVersionRequest
     */
    source?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateAnalysisUnitVersionRequest
     */
    createdBy?: string;
}

/**
 * Check if a given object implements the UpdateAnalysisUnitVersionRequest interface.
 */
export function instanceOfUpdateAnalysisUnitVersionRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function UpdateAnalysisUnitVersionRequestFromJSON(json: any): UpdateAnalysisUnitVersionRequest {
    return UpdateAnalysisUnitVersionRequestFromJSONTyped(json, false);
}

export function UpdateAnalysisUnitVersionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateAnalysisUnitVersionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'projectId': !exists(json, 'project_id') ? undefined : json['project_id'],
        'speciesId': !exists(json, 'species_id') ? undefined : json['species_id'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'source': !exists(json, 'source') ? undefined : json['source'],
        'createdBy': !exists(json, 'created_by') ? undefined : json['created_by'],
    };
}

export function UpdateAnalysisUnitVersionRequestToJSON(value?: UpdateAnalysisUnitVersionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'project_id': value.projectId,
        'species_id': value.speciesId,
        'date': value.date === undefined ? undefined : (value.date.toISOString().substr(0,10)),
        'name': value.name,
        'source': value.source,
        'created_by': value.createdBy,
    };
}

