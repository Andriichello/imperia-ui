/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Aerial survey summary resource object
 * @export
 * @interface AerialSurveySummary
 */
export interface AerialSurveySummary {
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    aerialSurveyId: number;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    surveyTypeId: number;
    /**
     * 
     * @type {string}
     * @memberof AerialSurveySummary
     */
    surveyType: string;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    speciesId: number;
    /**
     * 
     * @type {string}
     * @memberof AerialSurveySummary
     */
    species: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof AerialSurveySummary
     */
    speciesIds: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    bioYear: number;
    /**
     * 
     * @type {string}
     * @memberof AerialSurveySummary
     */
    date: string;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    analysisUnitId: number;
    /**
     * 
     * @type {string}
     * @memberof AerialSurveySummary
     */
    analysisUnit: string;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    managementUnitId: number;
    /**
     * 
     * @type {string}
     * @memberof AerialSurveySummary
     */
    managementUnit: string;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    aircraftId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof AerialSurveySummary
     */
    aircraft?: string | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    sampledSubunits: number;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    observations: number;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    maxTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    minTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    avgTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    total: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    malesTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    femalesTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    youngsTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    unclassTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    zeroTotals: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    otherSampledSubunits: number;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    otherObservations: number;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    otherMaxTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    otherMinTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    otherAvgTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    otherTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    otherMalesTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    otherFemalesTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    otherYoungsTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    otherUnclassTotal: number | null;
    /**
     * 
     * @type {number}
     * @memberof AerialSurveySummary
     */
    otherZeroTotals: number | null;
}

/**
 * Check if a given object implements the AerialSurveySummary interface.
 */
export function instanceOfAerialSurveySummary(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "aerialSurveyId" in value;
    isInstance = isInstance && "surveyTypeId" in value;
    isInstance = isInstance && "surveyType" in value;
    isInstance = isInstance && "speciesId" in value;
    isInstance = isInstance && "species" in value;
    isInstance = isInstance && "speciesIds" in value;
    isInstance = isInstance && "bioYear" in value;
    isInstance = isInstance && "date" in value;
    isInstance = isInstance && "analysisUnitId" in value;
    isInstance = isInstance && "analysisUnit" in value;
    isInstance = isInstance && "managementUnitId" in value;
    isInstance = isInstance && "managementUnit" in value;
    isInstance = isInstance && "sampledSubunits" in value;
    isInstance = isInstance && "observations" in value;
    isInstance = isInstance && "maxTotal" in value;
    isInstance = isInstance && "minTotal" in value;
    isInstance = isInstance && "avgTotal" in value;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "malesTotal" in value;
    isInstance = isInstance && "femalesTotal" in value;
    isInstance = isInstance && "youngsTotal" in value;
    isInstance = isInstance && "unclassTotal" in value;
    isInstance = isInstance && "zeroTotals" in value;
    isInstance = isInstance && "otherSampledSubunits" in value;
    isInstance = isInstance && "otherObservations" in value;
    isInstance = isInstance && "otherMaxTotal" in value;
    isInstance = isInstance && "otherMinTotal" in value;
    isInstance = isInstance && "otherAvgTotal" in value;
    isInstance = isInstance && "otherTotal" in value;
    isInstance = isInstance && "otherMalesTotal" in value;
    isInstance = isInstance && "otherFemalesTotal" in value;
    isInstance = isInstance && "otherYoungsTotal" in value;
    isInstance = isInstance && "otherUnclassTotal" in value;
    isInstance = isInstance && "otherZeroTotals" in value;

    return isInstance;
}

export function AerialSurveySummaryFromJSON(json: any): AerialSurveySummary {
    return AerialSurveySummaryFromJSONTyped(json, false);
}

export function AerialSurveySummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): AerialSurveySummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aerialSurveyId': json['aerial_survey_id'],
        'surveyTypeId': json['survey_type_id'],
        'surveyType': json['survey_type'],
        'speciesId': json['species_id'],
        'species': json['species'],
        'speciesIds': json['species_ids'],
        'bioYear': json['bio_year'],
        'date': json['date'],
        'analysisUnitId': json['analysis_unit_id'],
        'analysisUnit': json['analysis_unit'],
        'managementUnitId': json['management_unit_id'],
        'managementUnit': json['management_unit'],
        'aircraftId': !exists(json, 'aircraft_id') ? undefined : json['aircraft_id'],
        'aircraft': !exists(json, 'aircraft') ? undefined : json['aircraft'],
        'sampledSubunits': json['sampled_subunits'],
        'observations': json['observations'],
        'maxTotal': json['max_total'],
        'minTotal': json['min_total'],
        'avgTotal': json['avg_total'],
        'total': json['total'],
        'malesTotal': json['males_total'],
        'femalesTotal': json['females_total'],
        'youngsTotal': json['youngs_total'],
        'unclassTotal': json['unclass_total'],
        'zeroTotals': json['zero_totals'],
        'otherSampledSubunits': json['other_sampled_subunits'],
        'otherObservations': json['other_observations'],
        'otherMaxTotal': json['other_max_total'],
        'otherMinTotal': json['other_min_total'],
        'otherAvgTotal': json['other_avg_total'],
        'otherTotal': json['other_total'],
        'otherMalesTotal': json['other_males_total'],
        'otherFemalesTotal': json['other_females_total'],
        'otherYoungsTotal': json['other_youngs_total'],
        'otherUnclassTotal': json['other_unclass_total'],
        'otherZeroTotals': json['other_zero_totals'],
    };
}

export function AerialSurveySummaryToJSON(value?: AerialSurveySummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aerial_survey_id': value.aerialSurveyId,
        'survey_type_id': value.surveyTypeId,
        'survey_type': value.surveyType,
        'species_id': value.speciesId,
        'species': value.species,
        'species_ids': value.speciesIds,
        'bio_year': value.bioYear,
        'date': value.date,
        'analysis_unit_id': value.analysisUnitId,
        'analysis_unit': value.analysisUnit,
        'management_unit_id': value.managementUnitId,
        'management_unit': value.managementUnit,
        'aircraft_id': value.aircraftId,
        'aircraft': value.aircraft,
        'sampled_subunits': value.sampledSubunits,
        'observations': value.observations,
        'max_total': value.maxTotal,
        'min_total': value.minTotal,
        'avg_total': value.avgTotal,
        'total': value.total,
        'males_total': value.malesTotal,
        'females_total': value.femalesTotal,
        'youngs_total': value.youngsTotal,
        'unclass_total': value.unclassTotal,
        'zero_totals': value.zeroTotals,
        'other_sampled_subunits': value.otherSampledSubunits,
        'other_observations': value.otherObservations,
        'other_max_total': value.otherMaxTotal,
        'other_min_total': value.otherMinTotal,
        'other_avg_total': value.otherAvgTotal,
        'other_total': value.otherTotal,
        'other_males_total': value.otherMalesTotal,
        'other_females_total': value.otherFemalesTotal,
        'other_youngs_total': value.otherYoungsTotal,
        'other_unclass_total': value.otherUnclassTotal,
        'other_zero_totals': value.otherZeroTotals,
    };
}

