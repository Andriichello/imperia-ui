/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for creating a species record.
 *             `name`, `latin_name` and `inner_name` combination must be unique.
 *             within the `enum.species` table.
 * @export
 * @interface StoreSpeciesRequest
 */
export interface StoreSpeciesRequest {
    /**
     * 
     * @type {string}
     * @memberof StoreSpeciesRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof StoreSpeciesRequest
     */
    latinName: string;
    /**
     * 
     * @type {string}
     * @memberof StoreSpeciesRequest
     */
    innerName: string;
}

/**
 * Check if a given object implements the StoreSpeciesRequest interface.
 */
export function instanceOfStoreSpeciesRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "latinName" in value;
    isInstance = isInstance && "innerName" in value;

    return isInstance;
}

export function StoreSpeciesRequestFromJSON(json: any): StoreSpeciesRequest {
    return StoreSpeciesRequestFromJSONTyped(json, false);
}

export function StoreSpeciesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreSpeciesRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'latinName': json['latin_name'],
        'innerName': json['inner_name'],
    };
}

export function StoreSpeciesRequestToJSON(value?: StoreSpeciesRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'latin_name': value.latinName,
        'inner_name': value.innerName,
    };
}

