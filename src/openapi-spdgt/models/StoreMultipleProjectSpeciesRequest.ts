/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StoreProjectSpeciesRequest } from './StoreProjectSpeciesRequest';
import {
    StoreProjectSpeciesRequestFromJSON,
    StoreProjectSpeciesRequestFromJSONTyped,
    StoreProjectSpeciesRequestToJSON,
} from './StoreProjectSpeciesRequest';

/**
 * Store multiple Project Species request object.
 * @export
 * @interface StoreMultipleProjectSpeciesRequest
 */
export interface StoreMultipleProjectSpeciesRequest {
    /**
     * 
     * @type {Array<StoreProjectSpeciesRequest>}
     * @memberof StoreMultipleProjectSpeciesRequest
     */
    data: Array<StoreProjectSpeciesRequest>;
}

/**
 * Check if a given object implements the StoreMultipleProjectSpeciesRequest interface.
 */
export function instanceOfStoreMultipleProjectSpeciesRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function StoreMultipleProjectSpeciesRequestFromJSON(json: any): StoreMultipleProjectSpeciesRequest {
    return StoreMultipleProjectSpeciesRequestFromJSONTyped(json, false);
}

export function StoreMultipleProjectSpeciesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreMultipleProjectSpeciesRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(StoreProjectSpeciesRequestFromJSON)),
    };
}

export function StoreMultipleProjectSpeciesRequestToJSON(value?: StoreMultipleProjectSpeciesRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(StoreProjectSpeciesRequestToJSON)),
    };
}

