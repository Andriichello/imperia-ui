/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for creating a covar category record.
 *             `covar_id` and `category` combination must be unique
 *             within the `model.covar_categories` table.
 * @export
 * @interface StoreCovarCategoryRequest
 */
export interface StoreCovarCategoryRequest {
    /**
     * 
     * @type {number}
     * @memberof StoreCovarCategoryRequest
     */
    covarId: number;
    /**
     * 
     * @type {string}
     * @memberof StoreCovarCategoryRequest
     */
    category?: string;
    /**
     * 
     * @type {number}
     * @memberof StoreCovarCategoryRequest
     */
    value: number;
}

/**
 * Check if a given object implements the StoreCovarCategoryRequest interface.
 */
export function instanceOfStoreCovarCategoryRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "covarId" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function StoreCovarCategoryRequestFromJSON(json: any): StoreCovarCategoryRequest {
    return StoreCovarCategoryRequestFromJSONTyped(json, false);
}

export function StoreCovarCategoryRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreCovarCategoryRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'covarId': json['covar_id'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'value': json['value'],
    };
}

export function StoreCovarCategoryRequestToJSON(value?: StoreCovarCategoryRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'covar_id': value.covarId,
        'category': value.category,
        'value': value.value,
    };
}

