/* tslint:disable */
/* eslint-disable */
/**
 * count-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for creating an IPM entry record.
 * @export
 * @interface StoreIpmEntryRequest
 */
export interface StoreIpmEntryRequest {
    /**
     * 
     * @type {number}
     * @memberof StoreIpmEntryRequest
     */
    outputId: number;
    /**
     * 
     * @type {number}
     * @memberof StoreIpmEntryRequest
     */
    speciesId: number;
    /**
     * 
     * @type {number}
     * @memberof StoreIpmEntryRequest
     */
    analysisUnitId: number;
    /**
     * 
     * @type {number}
     * @memberof StoreIpmEntryRequest
     */
    managementUnitId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof StoreIpmEntryRequest
     */
    opinionOnEntryId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof StoreIpmEntryRequest
     */
    year: number;
    /**
     * 
     * @type {number}
     * @memberof StoreIpmEntryRequest
     */
    month?: number | null;
    /**
     * 
     * @type {string}
     * @memberof StoreIpmEntryRequest
     */
    sex?: StoreIpmEntryRequestSexEnum;
    /**
     * 
     * @type {string}
     * @memberof StoreIpmEntryRequest
     */
    age?: StoreIpmEntryRequestAgeEnum;
    /**
     * 
     * @type {number}
     * @memberof StoreIpmEntryRequest
     */
    parameterId: number | null;
    /**
     * 
     * @type {number}
     * @memberof StoreIpmEntryRequest
     */
    mean: number;
    /**
     * 
     * @type {number}
     * @memberof StoreIpmEntryRequest
     */
    se: number;
    /**
     * 
     * @type {number}
     * @memberof StoreIpmEntryRequest
     */
    lcl: number;
    /**
     * 
     * @type {number}
     * @memberof StoreIpmEntryRequest
     */
    ucl: number;
    /**
     * 
     * @type {string}
     * @memberof StoreIpmEntryRequest
     */
    source?: StoreIpmEntryRequestSourceEnum;
    /**
     * 
     * @type {string}
     * @memberof StoreIpmEntryRequest
     */
    method?: string | null;
}


/**
 * @export
 */
export const StoreIpmEntryRequestSexEnum = {
    Male: 'Male',
    Female: 'Female'
} as const;
export type StoreIpmEntryRequestSexEnum = typeof StoreIpmEntryRequestSexEnum[keyof typeof StoreIpmEntryRequestSexEnum];

/**
 * @export
 */
export const StoreIpmEntryRequestAgeEnum = {
    YoungOfYear: 'Young of Year',
    Juvenile: 'Juvenile',
    Subadult: 'Subadult',
    Adult: 'Adult'
} as const;
export type StoreIpmEntryRequestAgeEnum = typeof StoreIpmEntryRequestAgeEnum[keyof typeof StoreIpmEntryRequestAgeEnum];

/**
 * @export
 */
export const StoreIpmEntryRequestSourceEnum = {
    Internal: 'Internal',
    External: 'External',
    Api: 'API',
    Email: 'Email',
    Satellite: 'Satellite'
} as const;
export type StoreIpmEntryRequestSourceEnum = typeof StoreIpmEntryRequestSourceEnum[keyof typeof StoreIpmEntryRequestSourceEnum];


/**
 * Check if a given object implements the StoreIpmEntryRequest interface.
 */
export function instanceOfStoreIpmEntryRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "outputId" in value;
    isInstance = isInstance && "speciesId" in value;
    isInstance = isInstance && "analysisUnitId" in value;
    isInstance = isInstance && "year" in value;
    isInstance = isInstance && "parameterId" in value;
    isInstance = isInstance && "mean" in value;
    isInstance = isInstance && "se" in value;
    isInstance = isInstance && "lcl" in value;
    isInstance = isInstance && "ucl" in value;

    return isInstance;
}

export function StoreIpmEntryRequestFromJSON(json: any): StoreIpmEntryRequest {
    return StoreIpmEntryRequestFromJSONTyped(json, false);
}

export function StoreIpmEntryRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreIpmEntryRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'outputId': json['output_id'],
        'speciesId': json['species_id'],
        'analysisUnitId': json['analysis_unit_id'],
        'managementUnitId': !exists(json, 'management_unit_id') ? undefined : json['management_unit_id'],
        'opinionOnEntryId': !exists(json, 'opinion_on_entry_id') ? undefined : json['opinion_on_entry_id'],
        'year': json['year'],
        'month': !exists(json, 'month') ? undefined : json['month'],
        'sex': !exists(json, 'sex') ? undefined : json['sex'],
        'age': !exists(json, 'age') ? undefined : json['age'],
        'parameterId': json['parameter_id'],
        'mean': json['mean'],
        'se': json['se'],
        'lcl': json['lcl'],
        'ucl': json['ucl'],
        'source': !exists(json, 'source') ? undefined : json['source'],
        'method': !exists(json, 'method') ? undefined : json['method'],
    };
}

export function StoreIpmEntryRequestToJSON(value?: StoreIpmEntryRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'output_id': value.outputId,
        'species_id': value.speciesId,
        'analysis_unit_id': value.analysisUnitId,
        'management_unit_id': value.managementUnitId,
        'opinion_on_entry_id': value.opinionOnEntryId,
        'year': value.year,
        'month': value.month,
        'sex': value.sex,
        'age': value.age,
        'parameter_id': value.parameterId,
        'mean': value.mean,
        'se': value.se,
        'lcl': value.lcl,
        'ucl': value.ucl,
        'source': value.source,
        'method': value.method,
    };
}

