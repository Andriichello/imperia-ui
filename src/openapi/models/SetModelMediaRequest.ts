/* tslint:disable */
/* eslint-disable */
/**
 * imperia-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { AttachingMedia } from "./AttachingMedia";
import {
  AttachingMediaFromJSON,
  AttachingMediaFromJSONTyped,
  AttachingMediaToJSON,
} from "./AttachingMedia";

/**
 * Set model's media request
 * @export
 * @interface SetModelMediaRequest
 */
export interface SetModelMediaRequest {
  /**
   *
   * @type {number}
   * @memberof SetModelMediaRequest
   */
  modelId?: number;
  /**
   *
   * @type {string}
   * @memberof SetModelMediaRequest
   */
  modelType?: string;
  /**
   * Will be stored/updated according to the given order.
   * @type {Array<AttachingMedia>}
   * @memberof SetModelMediaRequest
   */
  media?: Array<AttachingMedia>;
}

/**
 * Check if a given object implements the SetModelMediaRequest interface.
 */
export function instanceOfSetModelMediaRequest(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function SetModelMediaRequestFromJSON(json: any): SetModelMediaRequest {
  return SetModelMediaRequestFromJSONTyped(json, false);
}

export function SetModelMediaRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): SetModelMediaRequest {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    modelId: !exists(json, "model_id") ? undefined : json["model_id"],
    modelType: !exists(json, "model_type") ? undefined : json["model_type"],
    media: !exists(json, "media")
      ? undefined
      : (json["media"] as Array<any>).map(AttachingMediaFromJSON),
  };
}

export function SetModelMediaRequestToJSON(
  value?: SetModelMediaRequest | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    model_id: value.modelId,
    model_type: value.modelType,
    media:
      value.media === undefined
        ? undefined
        : (value.media as Array<any>).map(AttachingMediaToJSON),
  };
}
