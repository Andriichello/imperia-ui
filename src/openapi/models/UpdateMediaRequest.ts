/* tslint:disable */
/* eslint-disable */
/**
 * imperia-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MediaMetadata } from './MediaMetadata';
import {
    MediaMetadataFromJSON,
    MediaMetadataFromJSONTyped,
    MediaMetadataToJSON,
} from './MediaMetadata';

/**
 * Update media request
 * @export
 * @interface UpdateMediaRequest
 */
export interface UpdateMediaRequest {
    /**
     * 
     * @type {any}
     * @memberof UpdateMediaRequest
     */
    file?: any;
    /**
     * 
     * @type {string}
     * @memberof UpdateMediaRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateMediaRequest
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateMediaRequest
     */
    description?: string | null;
    /**
     * Must start and end with the `/`.
     * @type {string}
     * @memberof UpdateMediaRequest
     */
    folder?: string;
    /**
     * 
     * @type {MediaMetadata}
     * @memberof UpdateMediaRequest
     */
    metadata?: MediaMetadata;
}

/**
 * Check if a given object implements the UpdateMediaRequest interface.
 */
export function instanceOfUpdateMediaRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateMediaRequestFromJSON(json: any): UpdateMediaRequest {
    return UpdateMediaRequestFromJSONTyped(json, false);
}

export function UpdateMediaRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateMediaRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'file': !exists(json, 'file') ? undefined : json['file'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'folder': !exists(json, 'folder') ? undefined : json['folder'],
        'metadata': !exists(json, 'metadata') ? undefined : MediaMetadataFromJSON(json['metadata']),
    };
}

export function UpdateMediaRequestToJSON(value?: UpdateMediaRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'file': value.file,
        'name': value.name,
        'title': value.title,
        'description': value.description,
        'folder': value.folder,
        'metadata': MediaMetadataToJSON(value.metadata),
    };
}

