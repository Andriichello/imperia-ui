/* tslint:disable */
/* eslint-disable */
/**
 * imperia-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { Menu } from "./Menu";
import { MenuFromJSON, MenuFromJSONTyped, MenuToJSON } from "./Menu";
import type { PaginationMeta } from "./PaginationMeta";
import {
  PaginationMetaFromJSON,
  PaginationMetaFromJSONTyped,
  PaginationMetaToJSON,
} from "./PaginationMeta";

/**
 * Index menus response object.
 * @export
 * @interface IndexMenuResponse
 */
export interface IndexMenuResponse {
  /**
   *
   * @type {Array<Menu>}
   * @memberof IndexMenuResponse
   */
  data: Array<Menu>;
  /**
   *
   * @type {PaginationMeta}
   * @memberof IndexMenuResponse
   */
  meta: PaginationMeta;
  /**
   *
   * @type {string}
   * @memberof IndexMenuResponse
   */
  message: string;
}

/**
 * Check if a given object implements the IndexMenuResponse interface.
 */
export function instanceOfIndexMenuResponse(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "data" in value;
  isInstance = isInstance && "meta" in value;
  isInstance = isInstance && "message" in value;

  return isInstance;
}

export function IndexMenuResponseFromJSON(json: any): IndexMenuResponse {
  return IndexMenuResponseFromJSONTyped(json, false);
}

export function IndexMenuResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): IndexMenuResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    data: (json["data"] as Array<any>).map(MenuFromJSON),
    meta: PaginationMetaFromJSON(json["meta"]),
    message: json["message"],
  };
}

export function IndexMenuResponseToJSON(value?: IndexMenuResponse | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    data: (value.data as Array<any>).map(MenuToJSON),
    meta: PaginationMetaToJSON(value.meta),
    message: value.message,
  };
}
