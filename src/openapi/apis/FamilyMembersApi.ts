/* tslint:disable */
/* eslint-disable */
/**
 * imperia-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DestroyFamilyMemberResponse,
  IndexFamilyMemberResponse,
  ShowFamilyMemberResponse,
  StoreFamilyMemberRequest,
  StoreFamilyMemberResponse,
  UnauthenticatedResponse,
  UpdateFamilyMemberRequest,
  UpdateFamilyMemberResponse,
} from '../models';
import {
    DestroyFamilyMemberResponseFromJSON,
    DestroyFamilyMemberResponseToJSON,
    IndexFamilyMemberResponseFromJSON,
    IndexFamilyMemberResponseToJSON,
    ShowFamilyMemberResponseFromJSON,
    ShowFamilyMemberResponseToJSON,
    StoreFamilyMemberRequestFromJSON,
    StoreFamilyMemberRequestToJSON,
    StoreFamilyMemberResponseFromJSON,
    StoreFamilyMemberResponseToJSON,
    UnauthenticatedResponseFromJSON,
    UnauthenticatedResponseToJSON,
    UpdateFamilyMemberRequestFromJSON,
    UpdateFamilyMemberRequestToJSON,
    UpdateFamilyMemberResponseFromJSON,
    UpdateFamilyMemberResponseToJSON,
} from '../models';

export interface DestroyFamilyMemberRequest {
    id: number;
}

export interface IndexFamilyMembersRequest {
    include?: string;
    pageSize?: number;
    pageNumber?: number;
}

export interface ShowFamilyMemberRequest {
    id: number;
    include?: string;
}

export interface StoreFamilyMemberOperationRequest {
    storeFamilyMemberRequest: StoreFamilyMemberRequest;
}

export interface UpdateFamilyMemberOperationRequest {
    id: number;
    updateFamilyMemberRequest: UpdateFamilyMemberRequest;
}

/**
 * 
 */
export class FamilyMembersApi extends runtime.BaseAPI {

    /**
     * Delete family member.
     */
    async destroyFamilyMemberRaw(requestParameters: DestroyFamilyMemberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DestroyFamilyMemberResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling destroyFamilyMember.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/family-members/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DestroyFamilyMemberResponseFromJSON(jsonValue));
    }

    /**
     * Delete family member.
     */
    async destroyFamilyMember(requestParameters: DestroyFamilyMemberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DestroyFamilyMemberResponse> {
        const response = await this.destroyFamilyMemberRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Index family members.
     */
    async indexFamilyMembersRaw(requestParameters: IndexFamilyMembersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IndexFamilyMemberResponse>> {
        const queryParameters: any = {};

        if (requestParameters.include !== undefined) {
            queryParameters['include'] = requestParameters.include;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['page[size]'] = requestParameters.pageSize;
        }

        if (requestParameters.pageNumber !== undefined) {
            queryParameters['page[number]'] = requestParameters.pageNumber;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/family-members`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IndexFamilyMemberResponseFromJSON(jsonValue));
    }

    /**
     * Index family members.
     */
    async indexFamilyMembers(requestParameters: IndexFamilyMembersRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IndexFamilyMemberResponse> {
        const response = await this.indexFamilyMembersRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Show family member by id.
     */
    async showFamilyMemberRaw(requestParameters: ShowFamilyMemberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShowFamilyMemberResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling showFamilyMember.');
        }

        const queryParameters: any = {};

        if (requestParameters.include !== undefined) {
            queryParameters['include'] = requestParameters.include;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/family-members/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShowFamilyMemberResponseFromJSON(jsonValue));
    }

    /**
     * Show family member by id.
     */
    async showFamilyMember(requestParameters: ShowFamilyMemberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShowFamilyMemberResponse> {
        const response = await this.showFamilyMemberRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Store family member.
     */
    async storeFamilyMemberRaw(requestParameters: StoreFamilyMemberOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StoreFamilyMemberResponse>> {
        if (requestParameters.storeFamilyMemberRequest === null || requestParameters.storeFamilyMemberRequest === undefined) {
            throw new runtime.RequiredError('storeFamilyMemberRequest','Required parameter requestParameters.storeFamilyMemberRequest was null or undefined when calling storeFamilyMember.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/family-members`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: StoreFamilyMemberRequestToJSON(requestParameters.storeFamilyMemberRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StoreFamilyMemberResponseFromJSON(jsonValue));
    }

    /**
     * Store family member.
     */
    async storeFamilyMember(requestParameters: StoreFamilyMemberOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StoreFamilyMemberResponse> {
        const response = await this.storeFamilyMemberRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Update family member.
     */
    async updateFamilyMemberRaw(requestParameters: UpdateFamilyMemberOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateFamilyMemberResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateFamilyMember.');
        }

        if (requestParameters.updateFamilyMemberRequest === null || requestParameters.updateFamilyMemberRequest === undefined) {
            throw new runtime.RequiredError('updateFamilyMemberRequest','Required parameter requestParameters.updateFamilyMemberRequest was null or undefined when calling updateFamilyMember.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/family-members/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateFamilyMemberRequestToJSON(requestParameters.updateFamilyMemberRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UpdateFamilyMemberResponseFromJSON(jsonValue));
    }

    /**
     * Update family member.
     */
    async updateFamilyMember(requestParameters: UpdateFamilyMemberOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateFamilyMemberResponse> {
        const response = await this.updateFamilyMemberRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
